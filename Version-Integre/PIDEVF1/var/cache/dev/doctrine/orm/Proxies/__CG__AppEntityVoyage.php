<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Voyage extends \App\Entity\Voyage implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Clien', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Destination', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Nom_Voyage', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Duree_Voyage', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'date', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'valabilite', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Image', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Prix'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Clien', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Destination', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Nom_Voyage', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Duree_Voyage', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'date', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'valabilite', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Image', '' . "\0" . 'App\\Entity\\Voyage' . "\0" . 'Prix'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Voyage $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getClien(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClien', []);

        return parent::getClien();
    }

    /**
     * {@inheritDoc}
     */
    public function setClien(?\App\Entity\User $Clien): \App\Entity\Voyage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClien', [$Clien]);

        return parent::setClien($Clien);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestination(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestination', []);

        return parent::getDestination();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestination(string $Destination): \App\Entity\Voyage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestination', [$Destination]);

        return parent::setDestination($Destination);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomVoyage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomVoyage', []);

        return parent::getNomVoyage();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomVoyage(string $Nom_Voyage): \App\Entity\Voyage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomVoyage', [$Nom_Voyage]);

        return parent::setNomVoyage($Nom_Voyage);
    }

    /**
     * {@inheritDoc}
     */
    public function getDureeVoyage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDureeVoyage', []);

        return parent::getDureeVoyage();
    }

    /**
     * {@inheritDoc}
     */
    public function setDureeVoyage(string $Duree_Voyage): \App\Entity\Voyage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDureeVoyage', [$Duree_Voyage]);

        return parent::setDureeVoyage($Duree_Voyage);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate(\DateTimeInterface $date): \App\Entity\Voyage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getValabilite(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValabilite', []);

        return parent::getValabilite();
    }

    /**
     * {@inheritDoc}
     */
    public function setValabilite(string $valabilite): \App\Entity\Voyage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValabilite', [$valabilite]);

        return parent::setValabilite($valabilite);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(string $Image): \App\Entity\Voyage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$Image]);

        return parent::setImage($Image);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrix(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrix', []);

        return parent::getPrix();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrix(int $Prix): \App\Entity\Voyage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrix', [$Prix]);

        return parent::setPrix($Prix);
    }

}
